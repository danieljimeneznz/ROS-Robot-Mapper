<launch>
    <param name="use_sim_time " value="true" />

    <!--<node pkg="robot_driver" type="pioneer_laser_node" name="pioneer_laser_node" output="screen">-->
        <!--<remap from="RosAria/cmd_vel" to="cmd_vel"/>-->
    <!--</node>-->

    <node pkg="stage_ros" type="stageros" name="stageros" args="$(find robot_driver)/world/task1.world">
    <!--<node pkg="stage_ros" type="stageros" name="stageros" args="$(find robot_driver)/world/generated.world">-->
    <!--<node pkg="stage_ros" type="stageros" name="stageros" args="$(find robot_driver)/world/barrel_no_border.world">-->
    <!--<node pkg="stage_ros" type="stageros" name="stageros" args="$(find robot_driver)/world/container_no_border.world">-->
    <!--<node pkg="stage_ros" type="stageros" name="stageros" args="$(find robot_driver)/world/barrel_border.world">-->
    <!--<node pkg="stage_ros" type="stageros" name="stageros" args="$(find robot_driver)/world/container_border.world">-->
        <remap from="base_scan" to="scanOrig" />
    </node>

    <node pkg="opencv_apps" type="hough_lines" name="hough_lines">
        <param name="hough_type" value="1" />
        <param name="debug_view" value="true" />
        <param name="threshold" value="115" />
        <param name="rho" value="5.0" />
        <param name="theta" value="0.025" />
        <param name="minLineLength" value="10.0" />
        <param name="maxLineGap" value="10.0" />
    </node>

    <node pkg="opencv_apps" type="hough_circles" name="hough_circles">
        <param name="canny_threshold" value="200" />
        <param name="debug_view" value="true" />
        <param name="accumulator_threshold" value="55" />
        <param name="gaussian_blur_size" value="8" />
        <param name="gaussian_sigma_x" value="7.0" />
        <param name="gaussian_sigma_y" value="7.0" />
        <param name="dp" value="3" />
        <param name="min_circle_radius" value="10" />
        <param name="max_circle_radius" value="50" />
    </node>

    <node pkg="object_detection" type="line_detector" name="line_detector" output="screen">
    </node>

    <!--<node pkg="object_detection" type="detect_objects" name="detect_objects" output="screen">-->
    <!--</node>-->

    <!--<node pkg="rqt_console" type="rqt_console" name="rqt_console">-->
    <!--</node>-->

    <node pkg="custom_noise" type="custom_noise_node" name="custom_noise_node" output="screen" >
        <remap from="scan_noise" to="scan"/>
    </node>
</launch>